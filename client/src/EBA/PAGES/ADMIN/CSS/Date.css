.date-container {
    position: relative;
    width: 100%;
    height: 100%;
    margin-bottom: 20px;
    z-index: 1;
}

.date-header {
    width: 100%;
    padding: 15px;
    background: var(--bg-color);
    border-radius: 10px;
    margin-bottom: 15px;
}

.header-content {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.add-event-btn {
    background: var(--btn-bg);
    border: none;
    border-radius: 5px;
    padding: 8px;
    color: white;
    cursor: pointer;
    transition: opacity 0.2s;
}

.add-event-btn:hover {
    opacity: 0.8;
}

.calendar-container {
    width: 100%;
    height: calc(100vh - 200px); /* Full height minus header space */
    background: var(--bg-color);
    border-radius: 10px;
    padding: 20px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    position: relative;
    z-index: 2;
    display: flex;
    gap: 20px;
}

.custom-calendar {
    width: 100% !important;
    max-width: none !important;
    height: 100% !important;
    background: var(--bg-color);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 10px;
    padding: 15px;
}

.custom-calendar .react-calendar__tile {
    padding: 20px;
    color: var(--txt-color);
    background: var(--bg-color);
    position: relative;
    height: 80px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.custom-calendar .react-calendar__tile--active {
    background: var(--btn-bg);
    color: white;
}

.custom-calendar .react-calendar__tile--now {
    background: rgba(var(--btn-bg-rgb), 0.2);
    font-weight: bold;
}

.custom-calendar .react-calendar__navigation {
    margin-bottom: 20px;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.custom-calendar .react-calendar__navigation button {
    color: var(--txt-color);
    font-size: 1.2rem;
    padding: 10px;
    background: none;
    border: none;
    cursor: pointer;
}

.custom-calendar .react-calendar__month-view__weekdays {
    color: var(--txt-color);
    font-weight: bold;
    text-transform: uppercase;
    padding: 10px 0;
    text-align: center;
}

.announcement-dot {
    width: 6px;
    height: 6px;
    background: var(--btn-bg);
    border-radius: 50%;
    position: absolute;
    bottom: 5px;
    left: 50%;
    transform: translateX(-50%);
}

.announcements-list {
    width: 40%;
    padding: 15px;
    border-left: 1px solid rgba(255, 255, 255, 0.1);
}

.announcement-item {
    background: rgba(255, 255, 255, 0.05);
    border-radius: 8px;
    padding: 15px;
    margin-bottom: 15px;
}

.announcement-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 10px;
}

.announcement-actions {
    display: flex;
    gap: 8px;
}

.announcement-actions button {
    background: none;
    border: none;
    color: var(--txt-color);
    cursor: pointer;
    padding: 4px;
    opacity: 0.7;
    transition: opacity 0.2s;
}

.announcement-actions button:hover {
    opacity: 1;
}

.announcement-item h4 {
    margin: 0 0 10px 0;
    color: var(--txt-color);
    font-size: 1.1rem;
}

.announcement-item p {
    margin: 0 0 10px 0;
    color: var(--txt-color);
    font-size: 0.9rem;
}

.announcement-item small {
    color: var(--txt-color);
    opacity: 0.7;
    font-size: 0.8rem;
}

.modal {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.5);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1000;
}

.modal-content {
    background: var(--bg-color);
    padding: 20px;
    border-radius: 10px;
    width: 90%;
    max-width: 500px;
}

.modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
}

.modal-header button {
    background: none;
    border: none;
    color: var(--txt-color);
    cursor: pointer;
    font-size: 1.2rem;
}

.input-block {
    margin-bottom: 15px;
}

.input-block label {
    display: block;
    margin-bottom: 5px;
    color: var(--txt-color);
}

.input-block input,
.input-block textarea,
.input-block select {
    width: 100%;
    padding: 8px;
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 5px;
    background: rgba(255, 255, 255, 0.05);
    color: var(--txt-color);
}

.input-block textarea {
    min-height: 100px;
    resize: vertical;
}

.message {
    position: fixed;
    bottom: 20px;
    right: 20px;
    padding: 10px 20px;
    background: var(--btn-bg);
    color: white;
    border-radius: 5px;
    animation: fadeIn 0.3s ease-in-out;
}

@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}